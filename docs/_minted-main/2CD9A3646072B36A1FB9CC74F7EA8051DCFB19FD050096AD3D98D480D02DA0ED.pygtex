\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{k+kn}{import} \PYG{n+nn}{pickle}
\PYG{k+kn}{import} \PYG{n+nn}{gzip}
\PYG{k+kn}{import} \PYG{n+nn}{numpy} \PYG{k}{as} \PYG{n+nn}{np}

\PYG{c+c1}{\PYGZsh{} loads the MNIST data set}
\PYG{k}{def} \PYG{n+nf}{load\PYGZus{}data}\PYG{p}{(}\PYG{p}{)}\PYG{p}{:}
    \PYG{k}{with} \PYG{n}{gzip}\PYG{o}{.}\PYG{n}{open}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}}\PYG{l+s+s1}{data/mnist.pkl.gz}\PYG{l+s+s1}{\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}}\PYG{l+s+s1}{rb}\PYG{l+s+s1}{\PYGZsq{}}\PYG{p}{)} \PYG{k}{as} \PYG{n}{file}\PYG{p}{:}
        \PYG{n}{unpickled} \PYG{o}{=} \PYG{n}{pickle}\PYG{o}{.}\PYG{n}{\PYGZus{}Unpickler}\PYG{p}{(}\PYG{n}{file}\PYG{p}{)}
        \PYG{n}{unpickled}\PYG{o}{.}\PYG{n}{encoding} \PYG{o}{=} \PYG{l+s+s1}{\PYGZsq{}}\PYG{l+s+s1}{latin1}\PYG{l+s+s1}{\PYGZsq{}}
        \PYG{n}{training\PYGZus{}data}\PYG{p}{,} \PYG{n}{validation\PYGZus{}data}\PYG{p}{,} \PYG{n}{test\PYGZus{}data} \PYG{o}{=} \PYG{n}{unpickled}\PYG{o}{.}\PYG{n}{load}\PYG{p}{(}\PYG{p}{)}
    \PYG{k}{return} \PYG{p}{(}\PYG{n}{training\PYGZus{}data}\PYG{p}{,} \PYG{n}{validation\PYGZus{}data}\PYG{p}{,} \PYG{n}{test\PYGZus{}data}\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{} makes a vector for the output layer from the correct output label}
\PYG{k}{def} \PYG{n+nf}{convert\PYGZus{}to\PYGZus{}vector}\PYG{p}{(}\PYG{n}{correct\PYGZus{}output}\PYG{p}{)}\PYG{p}{:}
    \PYG{n}{output\PYGZus{}layer} \PYG{o}{=} \PYG{n}{np}\PYG{o}{.}\PYG{n}{zeros}\PYG{p}{(}\PYG{p}{(}\PYG{l+m+mi}{10}\PYG{p}{,} \PYG{l+m+mi}{1}\PYG{p}{)}\PYG{p}{)}
    \PYG{n}{output\PYGZus{}layer}\PYG{p}{[}\PYG{n}{correct\PYGZus{}output}\PYG{p}{]} \PYG{o}{=} \PYG{l+m+mi}{1}
    \PYG{k}{return} \PYG{n}{output\PYGZus{}layer}

\PYG{n}{training\PYGZus{}data}\PYG{p}{,} \PYG{n}{\PYGZus{}}\PYG{p}{,} \PYG{n}{test\PYGZus{}data} \PYG{o}{=} \PYG{n}{load\PYGZus{}data}\PYG{p}{(}\PYG{p}{)}
\PYG{c+c1}{\PYGZsh{} convert training data into the right format}
\PYG{n}{training\PYGZus{}inputs} \PYG{o}{=} \PYG{p}{[}\PYG{n}{np}\PYG{o}{.}\PYG{n}{reshape}\PYG{p}{(}\PYG{n}{input\PYGZus{}data}\PYG{p}{,} \PYG{p}{(}\PYG{l+m+mi}{784}\PYG{p}{,} \PYG{l+m+mi}{1}\PYG{p}{)}\PYG{p}{)} \PYG{k}{for} \PYG{n}{input\PYGZus{}data} \PYG{o+ow}{in} \PYG{n}{training\PYGZus{}data}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{p}{]}
\PYG{n}{training\PYGZus{}outputs} \PYG{o}{=} \PYG{p}{[}\PYG{n}{convert\PYGZus{}to\PYGZus{}vector}\PYG{p}{(}\PYG{n}{output\PYGZus{}data}\PYG{p}{)} \PYG{k}{for} \PYG{n}{output\PYGZus{}data} \PYG{o+ow}{in} \PYG{n}{training\PYGZus{}data}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]}\PYG{p}{]}
\PYG{n}{training\PYGZus{}data} \PYG{o}{=} \PYG{p}{[}\PYG{p}{\PYGZob{}}
    \PYG{l+s+s1}{\PYGZsq{}}\PYG{l+s+s1}{input}\PYG{l+s+s1}{\PYGZsq{}}\PYG{p}{:} \PYG{n}{training\PYGZus{}inputs}\PYG{p}{[}\PYG{n}{example}\PYG{p}{]}\PYG{p}{,}
    \PYG{l+s+s1}{\PYGZsq{}}\PYG{l+s+s1}{output}\PYG{l+s+s1}{\PYGZsq{}}\PYG{p}{:} \PYG{n}{training\PYGZus{}outputs}\PYG{p}{[}\PYG{n}{example}\PYG{p}{]}
\PYG{p}{\PYGZcb{}} \PYG{k}{for} \PYG{n}{example} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{training\PYGZus{}inputs}\PYG{p}{)}\PYG{p}{)}\PYG{p}{]}
\PYG{c+c1}{\PYGZsh{} convert testing data into the right format}
\PYG{n}{test\PYGZus{}inputs} \PYG{o}{=} \PYG{p}{[}\PYG{n}{np}\PYG{o}{.}\PYG{n}{reshape}\PYG{p}{(}\PYG{n}{input\PYGZus{}data}\PYG{p}{,} \PYG{p}{(}\PYG{l+m+mi}{784}\PYG{p}{,} \PYG{l+m+mi}{1}\PYG{p}{)}\PYG{p}{)} \PYG{k}{for} \PYG{n}{input\PYGZus{}data} \PYG{o+ow}{in} \PYG{n}{test\PYGZus{}data}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{p}{]}
\PYG{n}{test\PYGZus{}outputs} \PYG{o}{=} \PYG{n}{test\PYGZus{}data}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]}
\PYG{n}{test\PYGZus{}data} \PYG{o}{=} \PYG{p}{[}\PYG{p}{\PYGZob{}}
    \PYG{l+s+s1}{\PYGZsq{}}\PYG{l+s+s1}{input}\PYG{l+s+s1}{\PYGZsq{}}\PYG{p}{:} \PYG{n}{test\PYGZus{}inputs}\PYG{p}{[}\PYG{n}{example}\PYG{p}{]}\PYG{p}{,}
    \PYG{l+s+s1}{\PYGZsq{}}\PYG{l+s+s1}{output}\PYG{l+s+s1}{\PYGZsq{}}\PYG{p}{:} \PYG{n}{test\PYGZus{}outputs}\PYG{p}{[}\PYG{n}{example}\PYG{p}{]}
\PYG{p}{\PYGZcb{}} \PYG{k}{for} \PYG{n}{example} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{test\PYGZus{}inputs}\PYG{p}{)}\PYG{p}{)}\PYG{p}{]}

\PYG{c+c1}{\PYGZsh{} save data to a file}
\PYG{k}{with} \PYG{n+nb}{open}\PYG{p}{(}\PYG{l+s+sa}{f}\PYG{l+s+s1}{\PYGZsq{}}\PYG{l+s+s1}{data/digits.pkl}\PYG{l+s+s1}{\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}}\PYG{l+s+s1}{wb}\PYG{l+s+s1}{\PYGZsq{}}\PYG{p}{)} \PYG{k}{as} \PYG{n}{file}\PYG{p}{:}
    \PYG{n}{pickle}\PYG{o}{.}\PYG{n}{dump}\PYG{p}{(}\PYG{p}{\PYGZob{}}\PYG{l+s+s1}{\PYGZsq{}}\PYG{l+s+s1}{training}\PYG{l+s+s1}{\PYGZsq{}}\PYG{p}{:} \PYG{n}{training\PYGZus{}data}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}}\PYG{l+s+s1}{testing}\PYG{l+s+s1}{\PYGZsq{}}\PYG{p}{:} \PYG{n}{test\PYGZus{}data}\PYG{p}{\PYGZcb{}}\PYG{p}{,} \PYG{n}{file}\PYG{p}{)}
\end{Verbatim}
